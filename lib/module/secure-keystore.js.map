{"version":3,"sources":["secure-keystore.ts"],"names":["RNSecureKeyStore","ACCESSIBLE","get","key","defaultValue","result","_err","set","value","accessible","ALWAYS_THIS_DEVICE_ONLY"],"mappings":"AAAA,OAAOA,gBAAP,IAA0BC,UAA1B,QAA2C,+BAA3C;AAEA,OAAO,eAAeC,GAAf,CACLC,GADK,EAELC,YAAoB,GAAG,EAFlB,EAGY;AACjB;AACA,MAAIC,MAAM,GAAGD,YAAb;;AACA,MAAI;AACFC,IAAAA,MAAM,GAAG,MAAML,gBAAgB,CAACE,GAAjB,CAAqBC,GAArB,CAAf;AACD,GAFD,CAEE,OAAOG,IAAP,EAAa,CAAE;;AACjB,SAAOD,MAAP;AACD;AAED,OAAO,eAAeE,GAAf,CAAmBJ,GAAnB,EAAgCK,KAAhC,EAAgE;AACrE,QAAMR,gBAAgB,CAACO,GAAjB,CAAqBJ,GAArB,EAA0BK,KAA1B,EAAiC;AACrCC,IAAAA,UAAU,EAAER,UAAU,CAACS;AADc,GAAjC,CAAN;AAGA,SAAOF,KAAP;AACD","sourcesContent":["import RNSecureKeyStore, {ACCESSIBLE} from 'react-native-secure-key-store'\n\nexport async function get(\n  key: string,\n  defaultValue: string = ''\n): Promise<string> {\n  // For retrieving key\n  let result = defaultValue\n  try {\n    result = await RNSecureKeyStore.get(key)\n  } catch (_err) {}\n  return result\n}\n\nexport async function set(key: string, value: string): Promise<string> {\n  await RNSecureKeyStore.set(key, value, {\n    accessible: ACCESSIBLE.ALWAYS_THIS_DEVICE_ONLY,\n  })\n  return value\n}\n"]}