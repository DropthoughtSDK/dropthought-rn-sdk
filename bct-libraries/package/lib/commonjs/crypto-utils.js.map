{"version":3,"sources":["crypto-utils.ts"],"names":["Aes","NativeModules","pbkdf2","password","salt","iteration","length","randomKey","encryptData","text","key","iv","cipher","encrypt","decryptData","encryptedData","decrypt"],"mappings":";;;;;;;;;;AAAA;;AACA,IAAIA,GAAG,GAAGC,2BAAcD,GAAxB;;AAEO,eAAeE,MAAf,CACLC,QADK,EAELC,IAFK,EAGLC,SAHK,EAILC,MAJK,EAKY;AACjB,SAAON,GAAG,CAACE,MAAJ,CAAWC,QAAX,EAAqBC,IAArB,EAA2BC,SAA3B,EAAsCC,MAAtC,CAAP;AACD;;AAEM,eAAeC,SAAf,CAAyBD,MAAc,GAAG,EAA1C,EAA+D;AACpE,SAAON,GAAG,CAACO,SAAJ,CAAcD,MAAd,CAAP;AACD;;AAOM,eAAeE,WAAf,CACLC,IADK,EAELC,GAFK,EAGmB;AACxB,QAAMC,EAAE,GAAG,MAAMJ,SAAS,CAAC,EAAD,CAA1B;AACA,QAAMK,MAAM,GAAG,MAAMZ,GAAG,CAACa,OAAJ,CAAYJ,IAAZ,EAAkBC,GAAlB,EAAuBC,EAAvB,CAArB;AACA,SAAO;AACLC,IAAAA,MADK;AAELD,IAAAA;AAFK,GAAP;AAID;;AAEM,eAAeG,WAAf,CACLC,aADK,EAELL,GAFK,EAGY;AACjB,SAAOV,GAAG,CAACgB,OAAJ,CAAYD,aAAa,CAACH,MAA1B,EAAkCF,GAAlC,EAAuCK,aAAa,CAACJ,EAArD,CAAP;AACD","sourcesContent":["import {NativeModules} from 'react-native'\nvar Aes = NativeModules.Aes\n\nexport async function pbkdf2(\n  password: string,\n  salt: string,\n  iteration: number,\n  length: number\n): Promise<string> {\n  return Aes.pbkdf2(password, salt, iteration, length)\n}\n\nexport async function randomKey(length: number = 16): Promise<string> {\n  return Aes.randomKey(length)\n}\n\nexport interface EncryptedData {\n  cipher: string\n  iv: string\n}\n\nexport async function encryptData(\n  text: string,\n  key: string\n): Promise<EncryptedData> {\n  const iv = await randomKey(16)\n  const cipher = await Aes.encrypt(text, key, iv)\n  return {\n    cipher,\n    iv,\n  }\n}\n\nexport async function decryptData(\n  encryptedData: EncryptedData,\n  key: string\n): Promise<string> {\n  return Aes.decrypt(encryptedData.cipher, key, encryptedData.iv)\n}\n"]}