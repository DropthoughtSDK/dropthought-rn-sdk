{"version":3,"sources":["secure-keystore.ts"],"names":["get","key","defaultValue","result","RNSecureKeyStore","_err","set","value","accessible","ACCESSIBLE","ALWAYS_THIS_DEVICE_ONLY"],"mappings":";;;;;;;;AAAA;;;;;;AAEO,eAAeA,GAAf,CACLC,GADK,EAELC,YAAoB,GAAG,EAFlB,EAGY;AACjB;AACA,MAAIC,MAAM,GAAGD,YAAb;;AACA,MAAI;AACFC,IAAAA,MAAM,GAAG,MAAMC,mCAAiBJ,GAAjB,CAAqBC,GAArB,CAAf;AACD,GAFD,CAEE,OAAOI,IAAP,EAAa,CAAE;;AACjB,SAAOF,MAAP;AACD;;AAEM,eAAeG,GAAf,CAAmBL,GAAnB,EAAgCM,KAAhC,EAAgE;AACrE,QAAMH,mCAAiBE,GAAjB,CAAqBL,GAArB,EAA0BM,KAA1B,EAAiC;AACrCC,IAAAA,UAAU,EAAEC,sCAAWC;AADc,GAAjC,CAAN;AAGA,SAAOH,KAAP;AACD","sourcesContent":["import RNSecureKeyStore, {ACCESSIBLE} from 'react-native-secure-key-store'\n\nexport async function get(\n  key: string,\n  defaultValue: string = ''\n): Promise<string> {\n  // For retrieving key\n  let result = defaultValue\n  try {\n    result = await RNSecureKeyStore.get(key)\n  } catch (_err) {}\n  return result\n}\n\nexport async function set(key: string, value: string): Promise<string> {\n  await RNSecureKeyStore.set(key, value, {\n    accessible: ACCESSIBLE.ALWAYS_THIS_DEVICE_ONLY,\n  })\n  return value\n}\n"]}