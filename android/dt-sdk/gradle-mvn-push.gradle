// Inspired from https://gist.github.com/adrianbk/c4982e5ebacc6b6ed902

apply plugin: 'maven-publish'

def isReleaseBuild() {
    def packageJson = new groovy.json.JsonSlurper().parseText(file('../../package.json').text)
    return packageJson.version.contains("SNAPSHOT") == false
}

def getOutputDir() {
    if (isReleaseBuild()) {
        return "${project.buildDir}/releases"
    } else {
        return "${project.buildDir}/snapshots"
    }
}

def getDestUrl() {
    if (isReleaseBuild()) {
        return "s3://dt-maven-demo/releases"
    } else {
        return "s3://dt-maven-demo/snapshots"
    }
}

def getArtifactFilePath() {
    if (isReleaseBuild()) {
        return "$buildDir/outputs/aar/${project.name}-release.aar"
    } else {
        return "$buildDir/outputs/aar/${project.name}-debug.aar"
    }
}

publishing {
    publications {
        release(MavenPublication) {
            def packageJson = new groovy.json.JsonSlurper().parseText(file('../../package.json').text)

            // The coordinates of the library, being set from variables that
            // we'll set up in a moment
            groupId "com.dropthought.app"
            artifactId project.name
            version packageJson.version
            artifact getArtifactFilePath()

            // Self-explanatory metadata for the most part
            pom {
                name = project.name
                description = 'Dropthought Android SDK'
                // If your project has a dedicated site, use its URL here
                url = 'https://github.com/DropthoughtSDK/dropthought-android-sdk'
                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
                }
//                // Version control info, if you're using GitHub, follow the format as seen here
//                scm {
//                    connection = 'scm:git:github.com/autsoft/krate.git'
//                    developerConnection = 'scm:git:ssh://github.com/autsoft/krate.git'
//                    url = 'https://github.com/autsoft/krate/tree/master'
//                }
                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.api.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url getDestUrl()
            credentials(AwsCredentials) {
                // accessKey = ""
                // secretKey = ""
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///" + getOutputDir())
        }
    }
}

task copyToS3(type: Exec) {
    commandLine 'aws', 's3', 'cp', '--recursive', getOutputDir(), getDestUrl()
}

copyToS3.dependsOn uploadArchives
